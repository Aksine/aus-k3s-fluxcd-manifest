apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: monitoring  # Shorter name for simpler PVC naming
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 75.18.0  # Use latest stable version
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3
  values:

    
    # Global settings
    nameOverride: ""
    fullnameOverride: ""
    
    # Disable AlertManager completely
    alertmanager:
      enabled: false
    
    # Disable Windows monitoring/exporter
    windowsMonitoring:
      enabled: false
    
    prometheus-windows-exporter:
      enabled: false
    
    # Prometheus Operator settings
    prometheusOperator:
      enabled: true
      logLevel: info
      logFormat: logfmt
      
    # Prometheus configuration
    prometheus:
      enabled: true
      prometheusSpec:
        # Retention settings
        retention: 15d
        retentionSize: 50GiB
        

        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: default  # Match your existing PVC's storage class
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi  # Should match or be smaller than existing PVC size
        
        
        # Resource limits
        resources:
          requests:
            memory: 2Gi
            cpu: 1000m
          limits:
            memory: 4Gi
            cpu: 2000m
        
        # Service configuration
        service:
          type: ClusterIP
          port: 9090
        
        # Disable AlertManager integration since we disabled it
        alertingEndpoints: []
        
        # Selector configurations (important for discovering monitors)
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
    
    # Your existing Grafana configuration (integrated)
    grafana:
      enabled: true
      
      # Ingress configuration
      ingress:
        enabled: true
        annotations: {}
        labels: {}
        path: /
        pathType: Prefix
        hosts:
          - monitor.aksine.lcl
        tls: []
      
      # Image configuration
      image:
        registry: docker.io
        repository: grafana/grafana
        tag: 12.0.4
        pullPolicy: Always 
      
      # Route configuration
      route:
        main:
          enabled: false
          apiVersion: gateway.networking.k8s.io/v1
          kind: HTTPRoute
          annotations: {}
          labels: {}
          hostnames: []
          parentRefs: []
          matches:
            - path:
                type: PathPrefix
                value: /
          filters: []
          additionalRules: []
      
      # Persistence configuration
      persistence:
        type: pvc
        enabled: true
        existingClaim: graf-pvc
      
      # Admin credentials from existing secret
      admin:
        existingSecret: graf-cred-secret
        userKey: user
        passwordKey: password
      
      # Dashboard providers
      dashboardProviders: {}
      
      # Dashboard configurations
      dashboards: {}
      
      # Reference to external ConfigMaps
      dashboardsConfigMaps: {}
      
      # Grafana configuration
      grafana.ini:
        paths:
          data: /var/lib/grafana/
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        analytics:
          check_for_updates: true
        log:
          mode: console
        grafana_net:
          url: https://grafana.net
        # server:
        #   domain: "{{ if (and .Values.ingress.enabled .Values.ingress.hosts) }}{{ tpl (.Values.ingress.hosts | first) . }}{{ else }}''{{ end }}"
      
      # Additional data sources - Prometheus will be auto-configured
      additionalDataSources:
        # - name: Prometheus
        #   type: prometheus
        #   url: http://{{ include "kube-prometheus-stack.fullname" . }}-prometheus.{{ .Release.Namespace }}.svc.cluster.local:9090
        #   access: proxy
        #   isDefault: true

        - name: InfluxDB
          type: influxdb
          url: http://influxdb-influxdb2
          access: proxy
          isDefault: false
          jsonData:
            version: Flux
            organization: influxdata
          secureJsonData:
            token: $admin_token
          editable: true
      envFromSecret: influxdb-cred-secret

    # Node Exporter (keep enabled for node metrics)
    nodeExporter:
      enabled: true
      
    # Kube State Metrics (keep enabled for cluster state metrics)
    kubeStateMetrics:
      enabled: true
    
    # Component scraping configurations
    kubeApiServer:
      enabled: true
    
    kubelet:
      enabled: true
    
    kubeControllerManager:
      enabled: true
    
    coreDns:
      enabled: true
    
    kubeEtcd:
      enabled: true
    
    kubeScheduler:
      enabled: true
    
    kubeProxy:
      enabled: true
    
    # Default curl options for dashboards
    defaultCurlOptions: "-skf"